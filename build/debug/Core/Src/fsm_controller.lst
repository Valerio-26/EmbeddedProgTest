ARM GAS  C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"fsm_controller.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/fsm_controller.c"
  20              		.section	.text.fsm_init,"ax",%progbits
  21              		.align	1
  22              		.global	fsm_init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	fsm_init:
  28              	.LVL0:
  29              	.LFB242:
   1:Core/Src/fsm_controller.c **** #include "fsm_controller.h"
   2:Core/Src/fsm_controller.c **** 
   3:Core/Src/fsm_controller.c **** extern ADC_HandleTypeDef hadc1;
   4:Core/Src/fsm_controller.c **** extern UART_HandleTypeDef huart2;
   5:Core/Src/fsm_controller.c **** extern uint32_t adc_value;
   6:Core/Src/fsm_controller.c **** 
   7:Core/Src/fsm_controller.c **** MovingAverageFilter adcFilter;
   8:Core/Src/fsm_controller.c **** char msg[20];
   9:Core/Src/fsm_controller.c **** 
  10:Core/Src/fsm_controller.c **** void fsm_init(FsmController* fsm) {
  30              		.loc 1 10 35 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  11:Core/Src/fsm_controller.c ****     fsm->state = INIT;
  35              		.loc 1 11 5 view .LVU1
  36              		.loc 1 11 16 is_stmt 0 view .LVU2
  37 0000 0023     		movs	r3, #0
  38 0002 0370     		strb	r3, [r0]
  12:Core/Src/fsm_controller.c **** }
  39              		.loc 1 12 1 view .LVU3
  40 0004 7047     		bx	lr
  41              		.cfi_endproc
  42              	.LFE242:
  44              		.section	.text.change_state,"ax",%progbits
  45              		.align	1
  46              		.global	change_state
  47              		.syntax unified
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s 			page 2


  48              		.thumb
  49              		.thumb_func
  51              	change_state:
  52              	.LVL1:
  53              	.LFB243:
  13:Core/Src/fsm_controller.c **** 
  14:Core/Src/fsm_controller.c **** void change_state(FsmController* fsm, State new_state) {
  54              		.loc 1 14 56 is_stmt 1 view -0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  15:Core/Src/fsm_controller.c ****     fsm->state = new_state;
  59              		.loc 1 15 5 view .LVU5
  60              		.loc 1 15 16 is_stmt 0 view .LVU6
  61 0000 0170     		strb	r1, [r0]
  16:Core/Src/fsm_controller.c **** }
  62              		.loc 1 16 1 view .LVU7
  63 0002 7047     		bx	lr
  64              		.cfi_endproc
  65              	.LFE243:
  67              		.section	.text.button_pressed,"ax",%progbits
  68              		.align	1
  69              		.global	button_pressed
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	button_pressed:
  75              	.LVL2:
  76              	.LFB244:
  17:Core/Src/fsm_controller.c **** 
  18:Core/Src/fsm_controller.c **** void button_pressed(FsmController* fsm) {
  77              		.loc 1 18 41 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		.loc 1 18 41 is_stmt 0 view .LVU9
  82 0000 08B5     		push	{r3, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 3, -8
  85              		.cfi_offset 14, -4
  19:Core/Src/fsm_controller.c ****     switch (fsm->state) {
  86              		.loc 1 19 5 is_stmt 1 view .LVU10
  87              		.loc 1 19 16 is_stmt 0 view .LVU11
  88 0002 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  89              		.loc 1 19 5 view .LVU12
  90 0004 013B     		subs	r3, r3, #1
  91 0006 032B     		cmp	r3, #3
  92 0008 13D8     		bhi	.L4
  93 000a DFE803F0 		tbb	[pc, r3]
  94              	.L6:
  95 000e 02       		.byte	(.L9-.L6)/2
  96 000f 06       		.byte	(.L8-.L6)/2
  97 0010 0A       		.byte	(.L7-.L6)/2
  98 0011 0E       		.byte	(.L5-.L6)/2
  99              		.p2align 1
 100              	.L9:
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s 			page 3


  20:Core/Src/fsm_controller.c ****     case WAIT_REQUEST:
  21:Core/Src/fsm_controller.c ****         change_state(fsm, LISTENING);
 101              		.loc 1 21 9 is_stmt 1 view .LVU13
 102 0012 0221     		movs	r1, #2
 103 0014 FFF7FEFF 		bl	change_state
 104              	.LVL3:
  22:Core/Src/fsm_controller.c ****         break;
 105              		.loc 1 22 9 view .LVU14
 106              	.L3:
  23:Core/Src/fsm_controller.c ****     case LISTENING:
  24:Core/Src/fsm_controller.c ****         change_state(fsm, PAUSE);
  25:Core/Src/fsm_controller.c ****         break;
  26:Core/Src/fsm_controller.c ****     case PAUSE:
  27:Core/Src/fsm_controller.c ****         change_state(fsm, LISTENING);
  28:Core/Src/fsm_controller.c ****         break;
  29:Core/Src/fsm_controller.c ****     case WARNING:
  30:Core/Src/fsm_controller.c ****         change_state(fsm, LISTENING);
  31:Core/Src/fsm_controller.c ****         break;
  32:Core/Src/fsm_controller.c ****     default:
  33:Core/Src/fsm_controller.c ****         change_state(fsm, FSMERROR);
  34:Core/Src/fsm_controller.c ****         break;
  35:Core/Src/fsm_controller.c ****     }
  36:Core/Src/fsm_controller.c **** }
 107              		.loc 1 36 1 is_stmt 0 view .LVU15
 108 0018 08BD     		pop	{r3, pc}
 109              	.LVL4:
 110              	.L8:
  24:Core/Src/fsm_controller.c ****         break;
 111              		.loc 1 24 9 is_stmt 1 view .LVU16
 112 001a 0321     		movs	r1, #3
 113 001c FFF7FEFF 		bl	change_state
 114              	.LVL5:
  25:Core/Src/fsm_controller.c ****     case PAUSE:
 115              		.loc 1 25 9 view .LVU17
 116 0020 FAE7     		b	.L3
 117              	.LVL6:
 118              	.L7:
  27:Core/Src/fsm_controller.c ****         break;
 119              		.loc 1 27 9 view .LVU18
 120 0022 0221     		movs	r1, #2
 121 0024 FFF7FEFF 		bl	change_state
 122              	.LVL7:
  28:Core/Src/fsm_controller.c ****     case WARNING:
 123              		.loc 1 28 9 view .LVU19
 124 0028 F6E7     		b	.L3
 125              	.LVL8:
 126              	.L5:
  30:Core/Src/fsm_controller.c ****         break;
 127              		.loc 1 30 9 view .LVU20
 128 002a 0221     		movs	r1, #2
 129 002c FFF7FEFF 		bl	change_state
 130              	.LVL9:
  31:Core/Src/fsm_controller.c ****     default:
 131              		.loc 1 31 9 view .LVU21
 132 0030 F2E7     		b	.L3
 133              	.LVL10:
 134              	.L4:
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s 			page 4


  33:Core/Src/fsm_controller.c ****         break;
 135              		.loc 1 33 9 view .LVU22
 136 0032 0521     		movs	r1, #5
 137 0034 FFF7FEFF 		bl	change_state
 138              	.LVL11:
  34:Core/Src/fsm_controller.c ****     }
 139              		.loc 1 34 9 view .LVU23
 140              		.loc 1 36 1 is_stmt 0 view .LVU24
 141 0038 EEE7     		b	.L3
 142              		.cfi_endproc
 143              	.LFE244:
 145              		.section	.rodata.fsm_run.str1.4,"aMS",%progbits,1
 146              		.align	2
 147              	.LC0:
 148 0000 4144433A 		.ascii	"ADC: %lu\015\012\000"
 148      20256C75 
 148      0D0A00
 149              		.section	.text.fsm_run,"ax",%progbits
 150              		.align	1
 151              		.global	fsm_run
 152              		.syntax unified
 153              		.thumb
 154              		.thumb_func
 156              	fsm_run:
 157              	.LVL12:
 158              	.LFB245:
  37:Core/Src/fsm_controller.c **** 
  38:Core/Src/fsm_controller.c **** void fsm_run(FsmController* fsm) {
 159              		.loc 1 38 34 is_stmt 1 view -0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		.loc 1 38 34 is_stmt 0 view .LVU26
 164 0000 38B5     		push	{r3, r4, r5, lr}
 165              		.cfi_def_cfa_offset 16
 166              		.cfi_offset 3, -16
 167              		.cfi_offset 4, -12
 168              		.cfi_offset 5, -8
 169              		.cfi_offset 14, -4
 170 0002 0446     		mov	r4, r0
  39:Core/Src/fsm_controller.c ****     switch (fsm->state) {
 171              		.loc 1 39 5 is_stmt 1 view .LVU27
 172              		.loc 1 39 16 is_stmt 0 view .LVU28
 173 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 174              		.loc 1 39 5 view .LVU29
 175 0006 052B     		cmp	r3, #5
 176 0008 4DD8     		bhi	.L13
 177 000a DFE803F0 		tbb	[pc, r3]
 178              	.L15:
 179 000e 03       		.byte	(.L18-.L15)/2
 180 000f 0D       		.byte	(.L12-.L15)/2
 181 0010 0E       		.byte	(.L17-.L15)/2
 182 0011 2D       		.byte	(.L16-.L15)/2
 183 0012 0D       		.byte	(.L12-.L15)/2
 184 0013 0D       		.byte	(.L12-.L15)/2
 185              		.p2align 1
 186              	.L18:
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s 			page 5


  40:Core/Src/fsm_controller.c ****     case INIT:
  41:Core/Src/fsm_controller.c ****         HAL_ADC_Start(&hadc1);
 187              		.loc 1 41 9 is_stmt 1 view .LVU30
 188 0014 2648     		ldr	r0, .L21
 189              	.LVL13:
 190              		.loc 1 41 9 is_stmt 0 view .LVU31
 191 0016 FFF7FEFF 		bl	HAL_ADC_Start
 192              	.LVL14:
  42:Core/Src/fsm_controller.c ****         initFilter(&adcFilter);
 193              		.loc 1 42 9 is_stmt 1 view .LVU32
 194 001a 2648     		ldr	r0, .L21+4
 195 001c FFF7FEFF 		bl	initFilter
 196              	.LVL15:
  43:Core/Src/fsm_controller.c ****         change_state(fsm, WAIT_REQUEST);
 197              		.loc 1 43 9 view .LVU33
 198 0020 0121     		movs	r1, #1
 199 0022 2046     		mov	r0, r4
 200 0024 FFF7FEFF 		bl	change_state
 201              	.LVL16:
  44:Core/Src/fsm_controller.c ****         break;
 202              		.loc 1 44 9 view .LVU34
 203              	.L12:
  45:Core/Src/fsm_controller.c ****     case WAIT_REQUEST:
  46:Core/Src/fsm_controller.c ****         
  47:Core/Src/fsm_controller.c ****         break;
  48:Core/Src/fsm_controller.c ****     case LISTENING:
  49:Core/Src/fsm_controller.c ****         HAL_ADC_PollForConversion(&hadc1, 20);
  50:Core/Src/fsm_controller.c ****         adc_value = HAL_ADC_GetValue(&hadc1);
  51:Core/Src/fsm_controller.c ****         updateFilter(&adcFilter, adc_value);
  52:Core/Src/fsm_controller.c ****         sprintf(msg, "ADC: %lu\r\n", adc_value);
  53:Core/Src/fsm_controller.c ****         HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
  54:Core/Src/fsm_controller.c ****         break;
  55:Core/Src/fsm_controller.c ****     case PAUSE:
  56:Core/Src/fsm_controller.c ****         // lampeggia il led ogni 1000 ms
  57:Core/Src/fsm_controller.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
  58:Core/Src/fsm_controller.c ****         HAL_Delay(500);
  59:Core/Src/fsm_controller.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
  60:Core/Src/fsm_controller.c ****         HAL_Delay(500);
  61:Core/Src/fsm_controller.c **** 
  62:Core/Src/fsm_controller.c ****         if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_13)){
  63:Core/Src/fsm_controller.c ****             return change_state(fsm, LISTENING);
  64:Core/Src/fsm_controller.c ****         }
  65:Core/Src/fsm_controller.c ****         break;
  66:Core/Src/fsm_controller.c ****     case WARNING:
  67:Core/Src/fsm_controller.c ****         // Add logic for WARNING state
  68:Core/Src/fsm_controller.c ****         break;
  69:Core/Src/fsm_controller.c ****     case FSMERROR:
  70:Core/Src/fsm_controller.c ****         // Add logic for ERROR state
  71:Core/Src/fsm_controller.c ****         break;
  72:Core/Src/fsm_controller.c ****     default:
  73:Core/Src/fsm_controller.c ****         change_state(fsm, FSMERROR);
  74:Core/Src/fsm_controller.c ****         break;
  75:Core/Src/fsm_controller.c ****     }
  76:Core/Src/fsm_controller.c **** }...
 204              		.loc 1 76 1 is_stmt 0 view .LVU35
 205 0028 38BD     		pop	{r3, r4, r5, pc}
 206              	.LVL17:
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s 			page 6


 207              	.L17:
  49:Core/Src/fsm_controller.c ****         HAL_ADC_PollForConversion(&hadc1, 20);
 208              		.loc 1 49 9 is_stmt 1 view .LVU36
 209 002a 214C     		ldr	r4, .L21
 210 002c 1421     		movs	r1, #20
 211 002e 2046     		mov	r0, r4
 212              	.LVL18:
  49:Core/Src/fsm_controller.c ****         HAL_ADC_PollForConversion(&hadc1, 20);
 213              		.loc 1 49 9 is_stmt 0 view .LVU37
 214 0030 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 215              	.LVL19:
  50:Core/Src/fsm_controller.c ****         adc_value = HAL_ADC_GetValue(&hadc1);
 216              		.loc 1 50 9 is_stmt 1 view .LVU38
  50:Core/Src/fsm_controller.c ****         adc_value = HAL_ADC_GetValue(&hadc1);
 217              		.loc 1 50 21 is_stmt 0 view .LVU39
 218 0034 2046     		mov	r0, r4
 219 0036 FFF7FEFF 		bl	HAL_ADC_GetValue
 220              	.LVL20:
 221 003a 0146     		mov	r1, r0
  50:Core/Src/fsm_controller.c ****         adc_value = HAL_ADC_GetValue(&hadc1);
 222              		.loc 1 50 19 discriminator 1 view .LVU40
 223 003c 1E4D     		ldr	r5, .L21+8
 224 003e 2860     		str	r0, [r5]
  51:Core/Src/fsm_controller.c ****         updateFilter(&adcFilter, adc_value);
 225              		.loc 1 51 9 is_stmt 1 view .LVU41
 226 0040 1C48     		ldr	r0, .L21+4
 227 0042 FFF7FEFF 		bl	updateFilter
 228              	.LVL21:
  52:Core/Src/fsm_controller.c ****         sprintf(msg, "ADC: %lu\r\n", adc_value);
 229              		.loc 1 52 9 view .LVU42
 230 0046 1D4C     		ldr	r4, .L21+12
 231 0048 2A68     		ldr	r2, [r5]
 232 004a 1D49     		ldr	r1, .L21+16
 233 004c 2046     		mov	r0, r4
 234 004e FFF7FEFF 		bl	sprintf
 235              	.LVL22:
  53:Core/Src/fsm_controller.c ****         HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 236              		.loc 1 53 9 view .LVU43
  53:Core/Src/fsm_controller.c ****         HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 237              		.loc 1 53 51 is_stmt 0 view .LVU44
 238 0052 2046     		mov	r0, r4
 239 0054 FFF7FEFF 		bl	strlen
 240              	.LVL23:
  53:Core/Src/fsm_controller.c ****         HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 241              		.loc 1 53 9 discriminator 1 view .LVU45
 242 0058 4FF0FF33 		mov	r3, #-1
 243 005c 82B2     		uxth	r2, r0
 244 005e 2146     		mov	r1, r4
 245 0060 1848     		ldr	r0, .L21+20
 246 0062 FFF7FEFF 		bl	HAL_UART_Transmit
 247              	.LVL24:
  54:Core/Src/fsm_controller.c ****         break;
 248              		.loc 1 54 9 is_stmt 1 view .LVU46
 249 0066 DFE7     		b	.L12
 250              	.LVL25:
 251              	.L16:
  57:Core/Src/fsm_controller.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s 			page 7


 252              		.loc 1 57 9 view .LVU47
 253 0068 174D     		ldr	r5, .L21+24
 254 006a 0122     		movs	r2, #1
 255 006c 2021     		movs	r1, #32
 256 006e 2846     		mov	r0, r5
 257              	.LVL26:
  57:Core/Src/fsm_controller.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 258              		.loc 1 57 9 is_stmt 0 view .LVU48
 259 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 260              	.LVL27:
  58:Core/Src/fsm_controller.c ****         HAL_Delay(500);
 261              		.loc 1 58 9 is_stmt 1 view .LVU49
 262 0074 4FF4FA70 		mov	r0, #500
 263 0078 FFF7FEFF 		bl	HAL_Delay
 264              	.LVL28:
  59:Core/Src/fsm_controller.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 265              		.loc 1 59 9 view .LVU50
 266 007c 0122     		movs	r2, #1
 267 007e 2021     		movs	r1, #32
 268 0080 2846     		mov	r0, r5
 269 0082 FFF7FEFF 		bl	HAL_GPIO_WritePin
 270              	.LVL29:
  60:Core/Src/fsm_controller.c ****         HAL_Delay(500);
 271              		.loc 1 60 9 view .LVU51
 272 0086 4FF4FA70 		mov	r0, #500
 273 008a FFF7FEFF 		bl	HAL_Delay
 274              	.LVL30:
  62:Core/Src/fsm_controller.c ****         if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_13)){
 275              		.loc 1 62 9 view .LVU52
  62:Core/Src/fsm_controller.c ****         if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_13)){
 276              		.loc 1 62 12 is_stmt 0 view .LVU53
 277 008e 4FF40051 		mov	r1, #8192
 278 0092 0E48     		ldr	r0, .L21+28
 279 0094 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 280              	.LVL31:
  62:Core/Src/fsm_controller.c ****         if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_13)){
 281              		.loc 1 62 11 discriminator 1 view .LVU54
 282 0098 0028     		cmp	r0, #0
 283 009a C5D0     		beq	.L12
  63:Core/Src/fsm_controller.c ****             return change_state(fsm, LISTENING);
 284              		.loc 1 63 13 is_stmt 1 view .LVU55
  63:Core/Src/fsm_controller.c ****             return change_state(fsm, LISTENING);
 285              		.loc 1 63 20 is_stmt 0 view .LVU56
 286 009c 0221     		movs	r1, #2
 287 009e 2046     		mov	r0, r4
 288 00a0 FFF7FEFF 		bl	change_state
 289              	.LVL32:
 290 00a4 C0E7     		b	.L12
 291              	.LVL33:
 292              	.L13:
  73:Core/Src/fsm_controller.c ****         change_state(fsm, FSMERROR);
 293              		.loc 1 73 9 is_stmt 1 view .LVU57
 294 00a6 0521     		movs	r1, #5
 295 00a8 FFF7FEFF 		bl	change_state
 296              	.LVL34:
  74:Core/Src/fsm_controller.c ****         break;
 297              		.loc 1 74 9 view .LVU58
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s 			page 8


 298 00ac BCE7     		b	.L12
 299              	.L22:
 300 00ae 00BF     		.align	2
 301              	.L21:
 302 00b0 00000000 		.word	hadc1
 303 00b4 00000000 		.word	adcFilter
 304 00b8 00000000 		.word	adc_value
 305 00bc 00000000 		.word	msg
 306 00c0 00000000 		.word	.LC0
 307 00c4 00000000 		.word	huart2
 308 00c8 00000240 		.word	1073872896
 309 00cc 00040240 		.word	1073873920
 310              		.cfi_endproc
 311              	.LFE245:
 313              		.global	msg
 314              		.section	.bss.msg,"aw",%nobits
 315              		.align	2
 318              	msg:
 319 0000 00000000 		.space	20
 319      00000000 
 319      00000000 
 319      00000000 
 319      00000000 
 320              		.global	adcFilter
 321              		.section	.bss.adcFilter,"aw",%nobits
 322              		.align	2
 325              	adcFilter:
 326 0000 00000000 		.space	608
 326      00000000 
 326      00000000 
 326      00000000 
 326      00000000 
 327              		.text
 328              	.Letext0:
 329              		.file 2 "C:/Users/valer/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 330              		.file 3 "C:/Users/valer/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 331              		.file 4 "C:/Users/valer/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 332              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 333              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 334              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 335              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 336              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 337              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 338              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 339              		.file 12 "Core/Inc/analog_filter.h"
 340              		.file 13 "Core/Inc/fsm_controller.h"
 341              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 342              		.file 15 "C:/Users/valer/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-t
 343              		.file 16 "C:/Users/valer/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-t
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 fsm_controller.c
C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s:21     .text.fsm_init:00000000 $t
C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s:27     .text.fsm_init:00000000 fsm_init
C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s:45     .text.change_state:00000000 $t
C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s:51     .text.change_state:00000000 change_state
C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s:68     .text.button_pressed:00000000 $t
C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s:74     .text.button_pressed:00000000 button_pressed
C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s:95     .text.button_pressed:0000000e $d
C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s:99     .text.button_pressed:00000012 $t
C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s:146    .rodata.fsm_run.str1.4:00000000 $d
C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s:150    .text.fsm_run:00000000 $t
C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s:156    .text.fsm_run:00000000 fsm_run
C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s:179    .text.fsm_run:0000000e $d
C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s:185    .text.fsm_run:00000014 $t
C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s:302    .text.fsm_run:000000b0 $d
C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s:325    .bss.adcFilter:00000000 adcFilter
C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s:318    .bss.msg:00000000 msg
C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s:315    .bss.msg:00000000 $d
C:\Users\valer\AppData\Local\Temp\ccvL6Eg2.s:322    .bss.adcFilter:00000000 $d

UNDEFINED SYMBOLS
HAL_ADC_Start
initFilter
HAL_ADC_PollForConversion
HAL_ADC_GetValue
updateFilter
sprintf
strlen
HAL_UART_Transmit
HAL_GPIO_WritePin
HAL_Delay
HAL_GPIO_ReadPin
hadc1
adc_value
huart2
